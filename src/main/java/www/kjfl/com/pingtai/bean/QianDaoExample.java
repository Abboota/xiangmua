package www.kjfl.com.pingtai.bean;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class QianDaoExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table qiandao
     *
     * @mbg.generated Fri Jan 04 09:03:03 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table qiandao
     *
     * @mbg.generated Fri Jan 04 09:03:03 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table qiandao
     *
     * @mbg.generated Fri Jan 04 09:03:03 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table qiandao
     *
     * @mbg.generated Fri Jan 04 09:03:03 CST 2019
     */
    public QianDaoExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table qiandao
     *
     * @mbg.generated Fri Jan 04 09:03:03 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table qiandao
     *
     * @mbg.generated Fri Jan 04 09:03:03 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table qiandao
     *
     * @mbg.generated Fri Jan 04 09:03:03 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table qiandao
     *
     * @mbg.generated Fri Jan 04 09:03:03 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table qiandao
     *
     * @mbg.generated Fri Jan 04 09:03:03 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table qiandao
     *
     * @mbg.generated Fri Jan 04 09:03:03 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table qiandao
     *
     * @mbg.generated Fri Jan 04 09:03:03 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table qiandao
     *
     * @mbg.generated Fri Jan 04 09:03:03 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table qiandao
     *
     * @mbg.generated Fri Jan 04 09:03:03 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table qiandao
     *
     * @mbg.generated Fri Jan 04 09:03:03 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table qiandao
     *
     * @mbg.generated Fri Jan 04 09:03:03 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andQidIsNull() {
            addCriterion("qid is null");
            return (Criteria) this;
        }

        public Criteria andQidIsNotNull() {
            addCriterion("qid is not null");
            return (Criteria) this;
        }

        public Criteria andQidEqualTo(String value) {
            addCriterion("qid =", value, "qid");
            return (Criteria) this;
        }

        public Criteria andQidNotEqualTo(String value) {
            addCriterion("qid <>", value, "qid");
            return (Criteria) this;
        }

        public Criteria andQidGreaterThan(String value) {
            addCriterion("qid >", value, "qid");
            return (Criteria) this;
        }

        public Criteria andQidGreaterThanOrEqualTo(String value) {
            addCriterion("qid >=", value, "qid");
            return (Criteria) this;
        }

        public Criteria andQidLessThan(String value) {
            addCriterion("qid <", value, "qid");
            return (Criteria) this;
        }

        public Criteria andQidLessThanOrEqualTo(String value) {
            addCriterion("qid <=", value, "qid");
            return (Criteria) this;
        }

        public Criteria andQidLike(String value) {
            addCriterion("qid like", value, "qid");
            return (Criteria) this;
        }

        public Criteria andUnameLike(String value) {
            addCriterion("uname like", value, "uname");
            return (Criteria) this;
        }


        public Criteria andQidNotLike(String value) {
            addCriterion("qid not like", value, "qid");
            return (Criteria) this;
        }

        public Criteria andQidIn(List<String> values) {
            addCriterion("qid in", values, "qid");
            return (Criteria) this;
        }

        public Criteria andQidNotIn(List<String> values) {
            addCriterion("qid not in", values, "qid");
            return (Criteria) this;
        }

        public Criteria andQidBetween(String value1, String value2) {
            addCriterion("qid between", value1, value2, "qid");
            return (Criteria) this;
        }

        public Criteria andQidNotBetween(String value1, String value2) {
            addCriterion("qid not between", value1, value2, "qid");
            return (Criteria) this;
        }

        public Criteria andQtimeIsNull() {
            addCriterion("qtime is null");
            return (Criteria) this;
        }

        public Criteria andQtimeIsNotNull() {
            addCriterion("qtime is not null");
            return (Criteria) this;
        }

        public Criteria andQtimeEqualTo(Date value) {
            addCriterionForJDBCDate("qtime =", value, "qtime");
            return (Criteria) this;
        }

        public Criteria andQtimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("qtime <>", value, "qtime");
            return (Criteria) this;
        }

        public Criteria andQtimeGreaterThan(Date value) {
            addCriterionForJDBCDate("qtime >", value, "qtime");
            return (Criteria) this;
        }

        public Criteria andQtimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("qtime >=", value, "qtime");
            return (Criteria) this;
        }

        public Criteria andQtimeLessThan(Date value) {
            addCriterionForJDBCDate("qtime <", value, "qtime");
            return (Criteria) this;
        }

        public Criteria andQtimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("qtime <=", value, "qtime");
            return (Criteria) this;
        }

        public Criteria andQtimeIn(List<Date> values) {
            addCriterionForJDBCDate("qtime in", values, "qtime");
            return (Criteria) this;
        }

        public Criteria andQtimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("qtime not in", values, "qtime");
            return (Criteria) this;
        }

        public Criteria andQtimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("qtime between", value1, value2, "qtime");
            return (Criteria) this;
        }

        public Criteria andQtimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("qtime not between", value1, value2, "qtime");
            return (Criteria) this;
        }

        public Criteria andQwcsIsNull() {
            addCriterion("qwcs is null");
            return (Criteria) this;
        }

        public Criteria andQwcsIsNotNull() {
            addCriterion("qwcs is not null");
            return (Criteria) this;
        }

        public Criteria andQwcsEqualTo(Integer value) {
            addCriterion("qwcs =", value, "qwcs");
            return (Criteria) this;
        }

        public Criteria andQwcsNotEqualTo(Integer value) {
            addCriterion("qwcs <>", value, "qwcs");
            return (Criteria) this;
        }

        public Criteria andShenNotEqualTo(Integer value) {
            addCriterion("shenhe <>", value, "shenhe");
            return (Criteria) this;
        }

        public Criteria andQwcsGreaterThan(Integer value) {
            addCriterion("qwcs >", value, "qwcs");
            return (Criteria) this;
        }

        public Criteria andQwcsGreaterThanOrEqualTo(Integer value) {
            addCriterion("qwcs >=", value, "qwcs");
            return (Criteria) this;
        }

        public Criteria andQwcsLessThan(Integer value) {
            addCriterion("qwcs <", value, "qwcs");
            return (Criteria) this;
        }

        public Criteria andQwcsLessThanOrEqualTo(Integer value) {
            addCriterion("qwcs <=", value, "qwcs");
            return (Criteria) this;
        }

        public Criteria andQwcsIn(List<Integer> values) {
            addCriterion("qwcs in", values, "qwcs");
            return (Criteria) this;
        }

        public Criteria andQwcsNotIn(List<Integer> values) {
            addCriterion("qwcs not in", values, "qwcs");
            return (Criteria) this;
        }

        public Criteria andQwcsBetween(Integer value1, Integer value2) {
            addCriterion("qwcs between", value1, value2, "qwcs");
            return (Criteria) this;
        }

        public Criteria andQwcsNotBetween(Integer value1, Integer value2) {
            addCriterion("qwcs not between", value1, value2, "qwcs");
            return (Criteria) this;
        }

        public Criteria andQjintianIsNull() {
            addCriterion("qjintian is null");
            return (Criteria) this;
        }

        public Criteria andQjintianIsNotNull() {
            addCriterion("qjintian is not null");
            return (Criteria) this;
        }

        public Criteria andQjintianEqualTo(Integer value) {
            addCriterion("qjintian =", value, "qjintian");
            return (Criteria) this;
        }

        public Criteria andQjintianNotEqualTo(Integer value) {
            addCriterion("qjintian <>", value, "qjintian");
            return (Criteria) this;
        }

        public Criteria andQjintianGreaterThan(Integer value) {
            addCriterion("qjintian >", value, "qjintian");
            return (Criteria) this;
        }

        public Criteria andQjintianGreaterThanOrEqualTo(Integer value) {
            addCriterion("qjintian >=", value, "qjintian");
            return (Criteria) this;
        }

        public Criteria andQjintianLessThan(Integer value) {
            addCriterion("qjintian <", value, "qjintian");
            return (Criteria) this;
        }

        public Criteria andQjintianLessThanOrEqualTo(Integer value) {
            addCriterion("qjintian <=", value, "qjintian");
            return (Criteria) this;
        }

        public Criteria andQjintianIn(List<Integer> values) {
            addCriterion("qjintian in", values, "qjintian");
            return (Criteria) this;
        }

        public Criteria andQjintianNotIn(List<Integer> values) {
            addCriterion("qjintian not in", values, "qjintian");
            return (Criteria) this;
        }

        public Criteria andQjintianBetween(Integer value1, Integer value2) {
            addCriterion("qjintian between", value1, value2, "qjintian");
            return (Criteria) this;
        }

        public Criteria andQjintianNotBetween(Integer value1, Integer value2) {
            addCriterion("qjintian not between", value1, value2, "qjintian");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table qiandao
     *
     * @mbg.generated do_not_delete_during_merge Fri Jan 04 09:03:03 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table qiandao
     *
     * @mbg.generated Fri Jan 04 09:03:03 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}